{"version":3,"sources":["reducers/favoritesReducer.js","reducers/index.js","store/configureStore.js","actions/favoritesAction.js","components/list/style.js","components/list/index.js","main/style.js","server/api.js","main/App.js","index.js"],"names":["INITIAL_STATE","list","rootReducer","combineReducers","favoritesReducer","persistReducer","key","storage","state","action","type","payload","filter","fav","id","configureStore","store","createStore","reducers","persistor","persistStore","addFavoriteAction","newFavorite","removeFavoriteAction","removeFavorite","Container","styled","div","Card","CardHover","props","display","connect","dispatch","bindActionCreators","gifsList","useState","gif","hover","setHover","map","style","position","onMouseEnter","src","images","original","url","alt","title","width","height","textAlign","onClick","gifUrl","inputTest","document","createElement","value","body","appendChild","select","execCommand","alert","removeChild","copyGif","className","find","f","ContainerApp","DivInputBlock","SearchInput","input","DivFlexRow","Button","button","MyFavoritesButton","api","axios","create","baseURL","interceptors","request","use","params","api_key","error","Promise","reject","response","data","pagination","gifs","setGifs","search","setSearch","viewFavorites","setViewFavorites","loadGifsTrending","a","get","limit","loadGifWithFilter","query","offset","q","useEffect","placeholder","onChange","e","target","onKeyPress","flex","ReactDOM","render","StrictMode","loading","onBeforeLift","getElementById"],"mappings":"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","file":"static/js/main.6e7101b5.chunk.js","sourcesContent":["const INITIAL_STATE = { list: [] }\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'ADD_FAVORITE':\n            return { list: [...state.list, action.payload] }\n        case 'REMOVE_FAVORITE':\n            return { list: state.list.filter(fav => fav.id !== action?.payload?.id) }\n        case 'RESET':\n            return INITIAL_STATE\n        default:\n            break\n    }\n\n    return state\n}","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport session from 'redux-persist/lib/storage/session'\nimport storage from 'redux-persist/lib/storage'\n\nimport favoritesReducer from './favoritesReducer'\n\n\nconst rootReducer = combineReducers({\n    favoritesReducer: persistReducer({ key: 'FAVORITES', storage }, favoritesReducer),\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport reducers from '../reducers'\n\nfunction configureStore () {\n  const store = createStore(reducers)\n  const persistor = persistStore(store)\n\n  return { persistor, store }\n}\n\nexport default configureStore\n","export const addFavoriteAction = newFavorite => {\n    return {\n        type: 'ADD_FAVORITE',\n        payload: newFavorite\n    }\n}\n\nexport const removeFavoriteAction = removeFavorite => {\n    return {\n        type: 'REMOVE_FAVORITE',\n        payload: removeFavorite\n    }\n}","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\n  background-color: #000;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.8rem;\n  overflow: hidden auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: 1fr;\n  grid-auto-flow: row;\n  grid-gap: 0.5rem;\n  padding: 0.5rem;\n\n  @media(max-width: 700px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media(max-width: 600px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media(max-width: 400px) {\n    grid-template-columns: 1fr;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #1a1a1a;\n  }\n  ::-webkit-scrollbar {\n      width: 2px;\n      background: #1a1a1a;\n  }\n  ::-webkit-scrollbar-thumb {\n      background: #FCA025;\n      border-radius: 20px;\n  }\n`\n\nexport const Card = styled.div`\n  width: 100%;\n  height: 15rem;\n  background-color: #fff;\n`\n\nexport const CardHover = styled.div`\n  width: 100%;\n  height: 15rem;\n  position: ${props => props.display && 'absolute'};\n  top: 0;\n  z-index: 1;  \n  background-color: rgba(0,0,0, 0.8);\n  display: ${props => !props.display ? 'none' : 'flex'};\n  align-items: center;\n  justify-content: space-evenly;\n  cursor: pointer;\n  font-size: 2rem;\n  color: #FCA025;\n\n  & div:hover {\n    color: #D88516\n  }\n\n  & p {\n    font-size: 0.8rem;\n    font-weight: bold;\n  }\n`\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { addFavoriteAction, removeFavoriteAction } from './../../actions/favoritesAction'\nimport {\n  Card,\n  Container,\n  CardHover\n} from './style'\n\nfunction List({\n  gifsList,\n  favoritesReducer,\n  addFavoriteAction,\n  removeFavoriteAction\n}) {\n  const [hover, setHover] = useState({\n    display: null,\n    gif: null\n  })\n\n  function copyGif(gifUrl) {\n    let inputTest = document.createElement(\"input\");\n    inputTest.value = gifUrl;\n    document.body.appendChild(inputTest);\n    inputTest.select();\n    document.execCommand('copy');\n    alert('Link do gif copiado!')\n    document.body.removeChild(inputTest);\n  }\n  return (\n    <Container>\n      {(gifsList || []).map(gif => {\n        return (\n          <div style={{ position: 'relative' }}>\n            <Card\n              key={gif.id}\n              onMouseEnter={() => setHover({ display: 'block', gif })}\n            >\n              <img\n                src={gif.images?.original?.url}\n                alt={gif.title}\n                style={{\n                  width: '100%',\n                  height: '100%'\n                }}\n              />\n            </Card>\n            <CardHover display={hover.display && hover?.gif?.id === gif?.id}>\n              {/* <div style={{ textAlign: 'center' }}>\n                <i className=\"fas fa-search-plus\"></i>\n                <p>Detalhes</p>\n              </div> */}\n              <div style={{ textAlign: 'center' }} onClick={() => copyGif(gif.images?.original?.url)}>\n                <i className=\"fas fa-link\"></i>\n                <p>Copiar Link do Gif</p>\n              </div>\n              <div style={{ textAlign: 'center' }}>\n                {(favoritesReducer?.list || []).find(f => f.id === gif.id)\n                  ? <><i className=\"fas fa-star\" onClick={() => removeFavoriteAction(gif)} /><p>Favorito</p></>\n                  : <><i className=\"far fa-star\" onClick={() => addFavoriteAction(gif)} /><p>Favoritar</p></>\n                }\n                \n              </div>\n            </CardHover>\n          </div>\n        )\n      })}\n\n    </Container>\n  )\n}\n\nList.propTypes = {\n  gifsList: PropTypes.array.isRequired,\n  favoritesReducer: PropTypes.array,\n  addFavoriteAction: PropTypes.func,\n  removeFavoriteAction: PropTypes.func\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    favoritesReducer: state.favoritesReducer\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n\n  return bindActionCreators({\n    addFavoriteAction,\n    removeFavoriteAction\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List)\n\n\n","import styled from 'styled-components'\n\nexport const ContainerApp = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  background: #121212;\n  padding: 10px;\n`\n\nexport const DivInputBlock = styled.div`\n  position: relative;\n\n  &:focus-within {\n    &:after {\n      width: 85%;\n      height: 1px;\n      position: absolute;\n      bottom: 9px;\n      right: 5px;\n      left: 25px;\n      background: #FCA025;\n      content: '';\n    }\n  }\n   & > i {\n      position: absolute;\n      top: 18px;\n      left: 15px;\n      color: #FCA025;\n   }\n`\n\nexport const SearchInput = styled.input`\n  height: 2.6rem;\n  width: 20rem;\n  margin: 5px;\n  border-radius: 0.8rem;\n  border: 2px solid #000;\n  background: #121212;\n  color: #FCA025;\n  cursor: text;\n  padding: 0 2rem;\n  outline: none;\n  \n\n\n  @media(max-width: 500px) {\n    width: 98%;\n  }\n\n  &:active {\n    outline: none;\n  }\n`\n\nexport const DivFlexRow = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nexport const Button = styled.button`\n  border: 0;\n  margin: 0;\n  padding: 0;\n  min-height: 2.2rem;\n  min-width: 5rem;\n  border-radius: 0.4rem;\n  background-color: #FCA025;\n  color: #fff;\n  font-weight: bold;\n  transition: background-color 1s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: #D88516\n  }\n\n  &:active {\n    outline: none;\n  }\n`\nexport const MyFavoritesButton = styled.button`\n  border: 0;\n  margin: 0;\n  padding: 0;\n  min-height: 2.2rem;\n  min-width: 8rem;\n  border-radius: 0.4rem;\n  background-color: #3BF409;\n  color: #fff;\n  font-weight: bold;\n  transition: background-color 1s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: #33D108;\n  }\n\n  &:active {\n    outline: none;\n  }\n`","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.giphy.com/v1/\",\n});\n\nconst requestSuccess = (request) => {\n  request.params = {\n    ...request.params,\n    api_key: \"X1doS5t2xc56iwXfvgYUusSbk5darAES\",\n  };\n\n  return request;\n};\n\nconst requestError = (error) => {\n  return Promise.reject(error);\n};\n\nconst responseSuccess = (response) => {\n  const { data, pagination } = response.data;\n  return { data, pagination };\n};\n\nconst responseError = (error) => {\n  return Promise.reject(error);\n};\n\napi.interceptors.request.use(requestSuccess, requestError);\napi.interceptors.response.use(responseSuccess, responseError);\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\n\nimport List from '../components/list'\nimport {\n  ContainerApp,\n  SearchInput,\n  DivInputBlock,\n  DivFlexRow, \n  Button,\n  MyFavoritesButton\n} from './style'\nimport api from '../server/api';\n\nfunction App({\n  favoritesReducer\n}) {\n  const [gifs, setGifs] = useState([])\n  const [search, setSearch] = useState('')\n  const [viewFavorites, setViewFavorites] = useState(false)\n\n  async function loadGifsTrending() {\n    const response = await api.get('/gifs/trending', {\n      params: {\n        limit: 16\n      }\n    })\n    // debugger\n    setGifs(response.data)\n  }\n\n  async function loadGifWithFilter(query){\n\n    if(!query){\n      loadGifsTrending()\n      return\n    }\n\n    const response = await api.get('/gifs/search', {\n      params: {\n        limit: 16,\n        offset: 0,\n        q: query\n      }\n    })\n    setViewFavorites(false)\n    setGifs(response.data)\n  }\n\n  function showFavorites(){\n    setViewFavorites(true)\n    setGifs(favoritesReducer.list)\n  }\n\n  useEffect(() => {\n    loadGifsTrending()\n  }, [])\n\n  useEffect(() => {\n    if(viewFavorites){\n      setGifs(favoritesReducer.list)\n    }\n  }, [favoritesReducer.list])\n\n  return (\n    <ContainerApp>\n      <DivFlexRow>\n        <DivInputBlock>\n          <i className=\"fa fa-search\"></i>\n          <SearchInput\n            placeholder=\"Buscar...\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            onKeyPress={e => e.key === 'Enter' && loadGifWithFilter(search)}\n          />\n        </DivInputBlock>\n        <Button onClick={() => loadGifWithFilter(search)}>\n          Buscar\n        </Button>\n        <div style={{ flex: 1 }} />\n        <MyFavoritesButton onClick={showFavorites}>\n          Meus Favoritos\n        </MyFavoritesButton>\n      </DivFlexRow>\n\n      <List gifsList={gifs} />\n    </ContainerApp>\n\n  );\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    favoritesReducer: state.favoritesReducer\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\nimport configureStore from './store/configureStore'\nimport App from './main/App';\nimport './assets/css/global.css'\n\nconst { persistor, store } = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate\n        loading={<div>Carregando...</div>}\n        onBeforeLift={() => null}\n        persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}